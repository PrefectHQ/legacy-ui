version: 2.1

orbs:
  docker: circleci/docker@1.0.0
  slack: circleci/slack@3.4.2

commands:
  prep:
    steps:
      - checkout
      - restore_cache:
          key: npm-dependencies-{{ arch }}-{{ checksum "package.json" }}
      - run:
          name: NPM Install
          command: npm install
      - save_cache:
          key: npm-dependencies-{{ arch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
  build:
    parameters:
      VUE_APP_AUTH0_PUBLIC_CLIENT_ID:
        type: string
      VUE_APP_STRIPE_PUBLIC_TOKEN:
        type: string
      VUE_APP_AUTH0_DOMAIN:
        type: string
      VUE_APP_CLOUD_URL:
        type: string
      VUE_APP_BASE_URL:
        type: string
    steps:
      - prep
      - run:
          name: NPM Build
          command: |
            export VUE_APP_AUTH0_DOMAIN=<< parameters.VUE_APP_AUTH0_DOMAIN >>
            export VUE_APP_AUTH0_PUBLIC_CLIENT_ID=<< parameters.VUE_APP_AUTH0_PUBLIC_CLIENT_ID >>
            export VUE_APP_STRIPE_PUBLIC_TOKEN=<< parameters.VUE_APP_STRIPE_PUBLIC_TOKEN >>
            export VUE_APP_RELEASE_TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            export VUE_APP_ENVIRONMENT=production
            export VUE_APP_CLOUD_URL=<< parameters.VUE_APP_CLOUD_URL >>
            export VUE_APP_BACKEND=CLOUD
            export VUE_APP_BASE_URL=<< parameters.VUE_APP_BASE_URL >>
            npm run build
  deploy_env:
    parameters:
      GCP_CREDS:
        type: string
      BUCKET_NAME:
        type: string

    steps:
      - run: echo << parameters.GCP_CREDS >> | gcloud auth activate-service-account --key-file=-
      - run: gsutil -m cp -r dist/* gs://<< parameters.BUCKET_NAME >>/

jobs:

  unit-test:
    # TODO: bump this to large in the future if needed. The default (medium) is resulting in test instabilities (ENOMEM: not enough memory, read)
    resource_class: medium
    docker:
      - image: node:10.16.3
    steps:
      - prep
      - run:
          # name: NPM Test:Unit
          command: npm run test:unit

  build-dev:
    resource_class: large
    docker:
      - image: node:14.7
    steps:
      - build:
          VUE_APP_AUTH0_DOMAIN: ${VUE_APP_AUTH0_DOMAIN__DEV}
          VUE_APP_AUTH0_PUBLIC_CLIENT_ID: ${VUE_APP_AUTH0_CLIENT_ID__DEV}
          VUE_APP_STRIPE_PUBLIC_TOKEN: ${VUE_APP_STRIPE_PK__DEV}
          VUE_APP_CLOUD_URL: ${VUE_APP_CLOUD_URL__DEV}
          VUE_APP_BASE_URL: ${VUE_APP_BASE_URL__DEV}
      - persist_to_workspace:
          root: /root/project
          paths:
            - dist
            - package.json
  deploy-dev:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: .
      - deploy_env:
          GCP_CREDS: ${GCP_SERVICE_KEY}
          BUCKET_NAME: ${GCS_BUCKET__DEV}
  build-staging:
    resource_class: large
    docker:
      - image: node:14.7
    steps:
      - build:
          VUE_APP_AUTH0_DOMAIN: ${VUE_APP_AUTH0_DOMAIN__STAGING}
          VUE_APP_AUTH0_PUBLIC_CLIENT_ID: ${VUE_APP_AUTH0_CLIENT_ID__STAGING}
          VUE_APP_STRIPE_PUBLIC_TOKEN: ${VUE_APP_STRIPE_PK__STAGING}
          VUE_APP_CLOUD_URL: ${VUE_APP_CLOUD_URL__STAGING}
          VUE_APP_BASE_URL: ${VUE_APP_BASE_URL__STAGING}
      - persist_to_workspace:
          root: /root/project
          paths:
            - dist
            - package.json
  deploy-staging:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: .
      - deploy_env:
          GCP_CREDS: ${GCP_SERVICE_KEY__STAGING}
          BUCKET_NAME: ${GCS_BUCKET__STAGING}
  build-prod:
    resource_class: large
    docker:
      - image: node:14.7
    steps:
      - build:
          VUE_APP_AUTH0_DOMAIN: ${VUE_APP_AUTH0_DOMAIN__PROD}
          VUE_APP_AUTH0_PUBLIC_CLIENT_ID: ${VUE_APP_AUTH0_CLIENT_ID__PROD}
          VUE_APP_STRIPE_PUBLIC_TOKEN: ${VUE_APP_STRIPE_PK__PROD}
          VUE_APP_CLOUD_URL: ${VUE_APP_CLOUD_URL__PROD}
          VUE_APP_BASE_URL: ${VUE_APP_BASE_URL__PROD}
      - persist_to_workspace:
          root: /root/project
          paths:
            - dist
            - package.json
  deploy-prod:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: .
      - deploy_env:
          GCP_CREDS: ${GCP_SERVICE_KEY__PROD}
          BUCKET_NAME: ${GCS_BUCKET__PROD}

workflows:
  version: 2

  'Run unit tests':
    jobs:
      - unit-test

  'Build and publish development UI artifacts':
    jobs:
      - docker/publish:
          docker-password: DOCKER_HUB_PW
          docker-username: DOCKER_HUB_USER
          image: 'prefecthq/ui'
          path: '.'
          tag: master
          filters:
            branches:
              only: master
  'Deploy dev':
    jobs:
      - build-dev:
          filters:
            branches:
              only:
                - master
      - deploy-dev:
          requires:
            - build-dev
          filters:
            branches:
              only:
                - master
  'Deploy staging':
    jobs:
      - build-staging:
          filters:
            branches:
              only:
                - master
      - deploy-staging:
          requires:
            - build-staging
          filters:
            branches:
              only:
                - master
  'Deploy prod':
    jobs:
      - slack/approval-notification:
          mentions: "nicholas,chris"
          message: "Release Prod"
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])).*/
      - request-release:
          type: approval
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])).*/
      - build-prod:
          requires:
            - request-release
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])).*/
      - docker/publish:
          requires:
            - request-release
          docker-password: DOCKER_HUB_PW
          docker-username: DOCKER_HUB_USER
          image: 'prefecthq/ui'
          path: '.'
          tag: $CIRCLE_TAG,latest
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])).*/
      - deploy-prod:
          requires:
            - build-prod
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])).*/
